## 예외페이지
 - 예외 상황이 발생했을 경우 웹 컨테이너(톰캣)에서 제공되는 기본 예외페이지를 보여줌
 - 개발 과정에서 이런 예외 페이지를 보고 어떤 에러가 발생했는지 알 수 있기 때문에
   수정하는데 도움이 됨
 - 하지만 상용서비스를 제공하는 중에 이런 에러페이지를 사용자에게 보여준다면 불편함을
   줄 수 있고, 신뢰도를 떨어뜨릴 수 있음
 - 또한 코드의 일부가 노출되면 보안 측면에서 좋지 않은 영향을 미침
 - 이러한 이유로 개발자가 따로 만들어 놓은 "에러페이지"로 유도하여 사용자에게 친숙한
   페이지를 노출하는 처리

## HTTP 주요 응답 상태코드
  200 : 요청을 성공적으로 처리함.
  307 : 임시로 페이지를 리다이렉트함.
-오류-
  400~ : 클라이언트측 오류
	400 - 클라이언트 요청이 잘못된 구문으로 작성되어 있음
	404 - 요청 URL을 찾을 수 없음
	405 - 요청 방식을 허용하지 않음(GET,POST)
  500~ : 서버측 어류
	503 - 서버가 일시적으로 서비스를 제공할 수 없음(일시적 서버 과부하,서버 임시보수)

java.lang.NumberFormatException
java.lang.NullPointerException

** 에러페이지의 우선순위
 여러 방법으로 에러페이지를 지정한 경우 다음의 우선순위에 따라 사용할 에러페이지를 선택

 1. 페이지 지시자 태그의 errorPage속성에 지정한 페이지
 2. web.xml에 지정한 에러 타입에 따른 페이지
 3. web.xml에 지정한 응답 상태 코드에 따른 페이지
 4. 위 3항목에 해당하지 않을 경우 톰캣이 제공하는 에러페이지

===============================================================
## JSP Action Tag
 - JSP페이지 내에서 어떤 동작을 하도록 지시하는 태그
   액션태그는 태그 형식을 그대로 가지고 있기 때문에 열리는 태그, 닫는 태그 둘다 있어야함
 - 단, 추가적인 종속된 태그가 없는 경우에는 끝에 "/" 처리하면 닫는 태그는 생략됨 (*)

 종류
  - 페이지 이동을 강제하는 forward
  - 페이지를 삽입하는 include
  - forward나 include를 할 때는 값을 지정하는 param
  - 자바 클래스와 연동하는 userBean 등을 사용할 수 있음.
---------------------------------------------------------------------------------------------------
## forward
---------------------------------------------------------------------------------------------------
## include
---------------------------------------------------------------------------------------------------
## param = request.set

##Action Tag 문제
 - score_quiz01.jsp 입력값 받기
 =>이름,국어,영어,수학 받는 form태그 작성(post)
 - score_quiz02.jsp에 quiz1에서 넘어온 값을 가지고 평균을 구하고, 
60 이상일 경우 -> score_Quiz3으로 이동
60 미만일 경우 -> score_quiz4로 이동
 - score_quiz3출력내용
   "ㅇㅇㅇ 님 평균 xx점 합격입니다."
 - score_quiz4출력내용
   "ㅇㅇㅇ 님 평균 xx점 불합격입니다."
 (session사용하지 않고)

===============================================================
## 자바빈 (JAVA Bean)
 - 자바빈이란 JAVA언어 데이터(변수)와 기능(메서드)로 이루어진 클래스
 - 자바빈은 데이터를 저장하는 변수, 데이터를 읽어오는 메서드(getter), 데이터를 저장할 때
   사용되는 메서드(setter)로 이루어짐
 - 자바빈은 데이터베이스와의 반복적인 작업을 효율적으로 처리하기 위해 사용
 - JSP에서는 액션태그를 사용하여 자바빈을 사용할 수 있음

[액션태그에서 자바빈을 사용하는 방법]
 <jsp:useBean id="객체이름" class="실제경로" scope="범위" />
  id = 객체이름 : 자바빈에 접근할 때 사용할 이름을 지정
  class = 실제경로 : 패키지 이름을 포함한 자바빈 클래스의 완전한 경로
  scope = 범위 : 자바빈 객체를 저장할 영역을 지정

-범위-
1. page : 하나의 JSP페이지를 처리할 때 사용되는 영역
2. request : 하나의 요청을 처리할 때 사용되는 영역
3. session : 하나의 웹브라우저와 관련된 영역
4. application : 하나의 웹 어플리케이션과 관련된 영역


 * JSP 액션태그로 setter와 getter 메서드를 사용할 수 있다.

1. setter 사용방법
  <jsp:setProperty property="변수명" name="자바빈id" value="값" />
 name : 값을 저장할 자바빈 객체의 이름을 지정
 property : 값을 저장할 프로퍼티의 이름을 지정, 클래스의 변수명
 value : 프로퍼티의 값을 지정, 표현식이나 EL로 설정할 수 있음

2. getter 사용방법
  <jsp:getProperty property="변수명" name="자바빈id" />
 name : 값을 저장할 자바빈 객체의 이름을 지정
 property : 값을 출력할 프로퍼티의 이름을 지정, 클래스의 변수명

================================================================
## 자바빈 문제(회원가입 처리) - id와 pw(pw, pw체크), 이름만으로

===>java코드로 작성, 액션태그(usebean)

1. quiz01.jsp 파일은 ID, PW, Name을 입력받아서 처리
2. quiz02.jsp 
   - quiz01.jsp로부터 전달받은 값을 처리
   - pw와 pw체크가 같다면, User객체에 전달받은 id,pw,name을 저장 이후 quiz03.jsp로 전달
   - quiz03.jsp 출력
     id(name)님 회원가입을 축하합니다.
     비밀번호는 *****입니다.
3. pw와 pw체크가 다르면 회원가입 실패->quiz04.jsp로 넘어가서 "회원가입에 실패했습니다."출력
================================================================
UML 관련 자료
https://www.microsoft.com/ko-kr/microsoft-365/business-insights-ideas/resources/guide-to-uml-diagramming-and-database-modeling
https://support.microsoft.com/ko-kr/office/visio%ec%9d%98-uml-%eb%8b%a4%ec%9d%b4%ec%96%b4%ea%b7%b8%eb%9e%a8-ca4e3ae9-d413-4c94-8a7a-38dac30cbed6?ui=ko-kr&rs=ko-kr&ad=kr#OfficeVersion=Plan_2_on_desktop,_2019
http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&ejkGb=KOR&barcode=9788968480911&orderClick=JAj

================================================================

## 데이터베이스 (Database)
 - 수많은 데이터들을 관리하기 위한 수단으로 베이터베이스를 활용
 - 데이터베이스는 데이터의 추가, 삭제, 검색, 수정, 이동 등의 기능
   (CRUD->Create, Read, Update, Delete)
 - 데이터베이스를 관리하는 도구 DBMS(DataBase Management System)
 - DBMS는 SQL언어와 데이터베이스를 연결하는 도구
 - DBMS 중 가장 많이 사용되는 DBMS는 RDBMS(관계형 데이터베이스)
 - 대표적인 RDBMS는 Oracle, MySQL(MariaDB), MSSQL(Window용)

## SQL(Structure Query Language)
 데이터베이스로부터 데이터를 조회하고 삭제하는 등의 작업을 수행할때 사용하는 언어

 - 테이블 : RDBMS에서 데이터를 저장하는 장소
 - 테이블에는 데이터를 저장하고 그 구조에 대한 정보를 갖고 있음.
 - 구조와 관련된 정보를 table.schema(스키마)
 - 테이블에는 각 정보를 저장하는 '컬럼(Column)'이 있고, 각 컬럼에 대한 데이터타입과 길이값을
   각각 가지게 된다.
 - 레코드(record)는 각 컬럼에 대해서 저장되는 값을 의미함.

** SQL 문법
  DDL(Data Definition Language) : 데이터 정의어
   - CREATE : 테이블이나 인덱스, 뷰 등 데이터베이스 객체를 생성 
   - DROP : 생성된 데이터베이스 객체를 삭제
   - ALTER : 이미 생성된 데이터베이스 객체를 수정

  DML(Data Manipulation Language) : 데이터 조작어(*)
   - SELECT(*) : 테이블이나 뷰에 있는 데이터를 조회
   - INSERT : 데이터를 신규로 생성
   - UPDATE : 이미 생성된 데이터를 수정
   - DELETE : 데이터를 삭제

  DCL(Data Control Language) : 데이터 제어어
   - GRANT : 사용자에게 특정 권한을 부여
   - REVOKE : 사용자에게 부여된 권한을 회수
   - COMMIT : 트랜잭션 처리, 변경된 데이터를 최종적용
   - ROLLBACK : 트랜잭션 처리, 변경된 데이터를 적용하지않고 이전으로 되돌림







