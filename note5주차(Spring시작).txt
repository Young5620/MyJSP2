 1. 복잡함에 반기를 들어서 만들어진 프레임워크
 2. 프로젝트의 전체 구조를 설계할 때 유용한 프레임워크
    (OOP구조를 뒷받침하는 구조를 설계하는 사상) -> 의존성 주입
 3. 다른 프레임워크들의 포용 : 
    다른 프레임워크들과의 토합 지원했기 때문에 최소한의 수정이 가능했고, 이는 기본 뼈대를
    흔들지 않고, 여러 종류의 프레임워크를 혼용해서 사용할 수 있다.
 4. 개발 생성성과 개발도구의 지원
    코드 양을 줄일수 있다. 그리고, 유지보수에서도 XML의 설정등을 이용했기 때문에 환영받음

 Spring의 버전들
 - Spring 2.5버전 : 어노테이션을 활용하는 설정을 도입하면서 편리한 설정과 개발이 가능하도록 지원
 - Spring 3.0버전 : 별도의 설정 없이도 Java클래스만으로 설정 파일을 대신할 수 있게 지원
 - Spring 4.0버전 : 모바일 환경과 웹 환경에서 많이 사용되는 REST방식의 컨트롤러 지원
 - Spring 5.0버전 : Reactor를 이용한 Reactive 스타일의 개발 환경 지원(*)